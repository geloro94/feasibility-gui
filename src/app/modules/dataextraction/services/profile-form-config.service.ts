import { Injectable } from '@angular/core';
import { ProfileFormConfigs } from '../models/field-config.model';

@Injectable({
  providedIn: 'root',
})
export class ProfileFormConfigService {
  private configs: ProfileFormConfigs = {
    Specimen: {
      filter: [
        {
          field: 'specimenType',
          type: 'coding',
          label: 'Specimen Type',
          valueSetUrls: [
            'https://www.medizininformatik-initiative.de/fhir/fdpg/ValueSet/TopXSpecimenCodes',
          ],
          path: 'Specimen.type.coding',
        },
        // { field: 'onsetDate', type: 'date', label: 'Onset Date' },
      ],

      paths: [
        {
          path: 'status',
          mandatory: false,
          preselected: true,
          label: 'status',
          type: 'code',
          info: 'available | unavailable | unsatisfactory | entered-in-error',
        },
        {
          path: 'type',
          mandatory: false,
          preselected: true,
          label: 'type',
          type: 'CodeableConcept',
          info: 'Kind of material that forms the specimen',
        },
        {
          path: 'collection',
          mandatory: false,
          preselected: true,
          label: 'collection',
          type: 'BackboneElement',
          info: 'Collection details',
        },
        {
          path: 'processing',
          mandatory: false,
          preselected: false,
          label: 'processing',
          type: 'BackboneElement',
          info: 'Processing and processing step details',
        },
        {
          path: 'processing',
          mandatory: false,
          preselected: false,
          label: 'processing',
          type: 'BackboneElement',
          info: 'Processing and processing step details',
        },
        {
          path: 'container',
          mandatory: false,
          preselected: false,
          label: 'container',
          type: 'BackboneElement',
          info: 'Direct container of specimen (tube/slide, etc.)',
        },
        {
          path: 'note',
          mandatory: false,
          preselected: false,
          label: 'note',
          type: 'Annotation',
          info: 'Comments',
        },
      ],
    },
    Patient: {
      filter: [],
      paths: [
        {
          type: 'String',
          path: 'Patient.id',
          preselected: true,
          mandatory: true,
          label: 'Patient id',
          info: 'The unique identifier for the Patient resource instance.',
          hidden: true,
        },
        {
          type: 'Code',
          path: 'Patient.gender',
          preselected: true,
          mandatory: false,
          label: 'Gender',
          info: 'The patient\'s gender.',
        },
        {
          type: 'DateTime',
          path: 'Patient.birthDate',
          preselected: true,
          mandatory: false,
          label: 'Birth Date',
          info: 'The patient\'s date of birth.',
        },
        {
          type: 'DateTime',
          path: 'Patient.deceasedDateTime',
          preselected: false,
          mandatory: false,
          label: 'Deceased Date/Time',
          info: 'The date and time of the patient\'s death.',
        },
        {
          type: 'Boolean',
          path: 'Patient.deceasedBoolean',
          preselected: false,
          mandatory: false,
          label: 'Deceased',
          info: 'Indicates if the patient is deceased.',
        },
        {
          type: 'String',
          path: 'Patient.maritalStatus.coding.first()',
          preselected: false,
          mandatory: false,
          label: 'Marital Status Code',
          info: 'The code representing the patient\'s marital status.',
        },
        {
          type: 'String',
          path: 'Patient.address.use',
          preselected: false,
          mandatory: false,
          label: 'Address Use',
          info: 'Use of the address (e.g., home, work).',
        },
        {
          type: 'String',
          path: 'Patient.address.type',
          preselected: false,
          mandatory: false,
          label: 'Address Type',
          info: 'The type of address (e.g., postal, physical).',
        },
        {
          type: 'String',
          path: 'Patient.address.line',
          preselected: false,
          mandatory: false,
          label: 'Address Line',
          info: 'The detailed address line.',
        },
        {
          type: 'String',
          path: 'Patient.address.city',
          preselected: false,
          mandatory: false,
          label: 'City',
          info: 'The city name in the address.',
        },
        {
          type: 'String',
          path: 'Patient.address.district',
          preselected: false,
          mandatory: false,
          label: 'District',
          info: 'The district or county name in the address.',
        },
        {
          type: 'String',
          path: 'Patient.address.state',
          preselected: false,
          mandatory: false,
          label: 'State',
          info: 'The state name in the address.',
        },
        {
          type: 'String',
          path: 'Patient.address.postalCode',
          preselected: false,
          mandatory: false,
          label: 'Postal Code',
          info: 'The postal code in the address.',
        },
        {
          type: 'String',
          path: 'Patient.address.country',
          preselected: false,
          mandatory: false,
          label: 'Country',
          info: 'The country name in the address.',
        },
        {
          type: 'String',
          path: 'Patient.telecom.system',
          preselected: false,
          mandatory: false,
          label: 'Contact Point System',
          info: 'The system for the contact point (e.g., phone, email).',
        },
        {
          type: 'String',
          path: 'Patient.telecom.value',
          preselected: false,
          mandatory: false,
          label: 'Contact Point Value',
          info: 'The actual contact point details (e.g., phone number, email address).',
        },
        {
          type: 'String',
          path: 'Patient.telecom.use',
          preselected: false,
          mandatory: false,
          label: 'Contact Point Use',
          info: 'The use of the contact point (e.g., home, work, temp).',
        },
      ],
    },
    Observation: {
      filter: [
        {
          field: 'observationCode',
          type: 'coding',
          label: 'Observation Code (LOINC)',
          valueSetUrls: ['https://ontoserver.imi.uni-luebeck.de/fhir/ValueSet/synthea_observation'],
          path: 'Observation.code.coding',
        },
        {
          field: 'effectiveDate',
          type: 'date',
          label: 'Effective Date',
          path: 'Observation.effectiveDateTime',
        },
      ],
      paths: [
        {
          type: 'Reference',
          path: 'Observation.subject.resolve().ofType(Patient).id',
          preselected: true,
          mandatory: true,
          label: 'Patient id',
          info: 'Identifier for the patient to whom the observation pertains.',
          hidden: true,
        },
        {
          type: 'Coding',
          path: 'Observation.code.coding.first()',
          preselected: true,
          mandatory: true,
          label: 'Primary Code (LOINC)',
          info: 'The main code identifying what the observation is measuring or assessing.',
        },
        {
          type: 'Quantity',
          path: 'Observation.valueQuantity.value',
          preselected: true,
          mandatory: false,
          label: 'Quantitative Value',
          info: 'The quantitative measurement or finding of the observation.',
        },
        {
          type: 'Code',
          path: 'Observation.valueQuantity.unit',
          preselected: true,
          mandatory: false,
          label: 'Unit',
          info: 'The unit of measure for the observation value.',
        },
        {
          type: 'CodeableConcept',
          path: 'Observation.valueCodeableConcept.coding.first()',
          preselected: false,
          mandatory: false,
          label: 'Qualitative Value',
          info: 'A descriptive or qualitative outcome of the observation when numerical values are not applicable.',
        },
        {
          type: 'DateTime',
          path: 'Observation.effectiveDateTime',
          preselected: true,
          mandatory: false,
          label: 'Effective date/time',
          info: 'The exact timing of when the observation was made or verified.',
        },
        {
          type: 'Reference',
          path: 'Observation.encounter.resolve().id',
          preselected: false,
          mandatory: false,
          label: 'Associated Encounter',
          info: 'Link to the healthcare encounter during which the observation was made.',
        },
        {
          type: 'Code',
          path: 'Observation.category.coding.first().code',
          preselected: false,
          mandatory: false,
          label: 'Category',
          info: 'Classification of the observation into categories like vital signs, laboratory data, etc.',
        },
        {
          type: 'Meta',
          path: 'Observation.meta.profile',
          preselected: false,
          mandatory: false,
          label: 'Observation Compliance Profiles',
          info: 'Indicates compliance with specific standards or guidelines relevant to the observation\'s use or interpretation.',
          hidden: true,
        },
        {
          type: 'String',
          path: 'Observation.id',
          preselected: true,
          mandatory: true,
          label: 'Observation ID',
          info: 'The unique identifier for the Observation resource instance.',
          hidden: true,
        },
      ],
    },
    Condition: {
      filter: [
        {
          field: 'conditionCode',
          type: 'coding',
          label: 'Condition Code (SNOMED CT)',
          valueSetUrls: ['https://ontoserver.imi.uni-luebeck.de/fhir/ValueSet/synthea_condition'],
          path: 'Condition.code.coding',
        },
        {
          field: 'onsetDate',
          type: 'date',
          label: 'Onset Date',
          path: 'Condition.onsetDateTime',
        },
      ],
      paths: [
        {
          type: 'Reference',
          path: 'Condition.subject.resolve().ofType(Patient).id',
          preselected: true,
          mandatory: true,
          label: 'Patient id',
          info: 'Identifier for the patient to whom the condition pertains.',
          hidden: true,
        },
        {
          type: 'Coding',
          path: 'Condition.code.coding.first()',
          preselected: true,
          mandatory: true,
          label: 'Primary Code (SNOMED)',
          info: 'The main code identifying the health condition.',
        },
        {
          type: 'Coding',
          path: 'Condition.verificationStatus.coding.first()',
          preselected: true,
          mandatory: false,
          label: 'Verification Status',
          info: 'Confirmation status of the condition.',
        },
        {
          type: 'Coding',
          path: 'Condition.clinicalStatus.coding.first()',
          preselected: true,
          mandatory: false,
          label: 'Clinical Status',
          info: 'Clinical status of the condition.',
        },
        {
          type: 'DateTime',
          path: 'Condition.onsetDateTime',
          preselected: true,
          mandatory: false,
          label: 'Onset Date/Time',
          info: 'The exact timing of when the condition started.',
        },
        {
          type: 'DateTime',
          path: 'Condition.recordedDate',
          preselected: true,
          mandatory: false,
          label: 'Recorded Date',
          info: 'Date when the condition was recorded.',
        },
        {
          type: 'DateTime',
          path: 'Condition.abatementDateTime',
          preselected: false,
          mandatory: false,
          label: 'Abatement Date/Time',
          info: 'The timing of when the condition resolved, if applicable.',
        },
        {
          type: 'Reference',
          path: 'Condition.encounter.resolve().id',
          preselected: false,
          mandatory: false,
          label: 'Associated Encounter',
          info: 'Link to the healthcare encounter during which the condition was diagnosed or managed.',
        },
        {
          type: 'Meta',
          path: 'Condition.meta.profile',
          preselected: false,
          mandatory: false,
          label: 'Condition Compliance Profiles',
          info: 'Indicates compliance with specific standards or guidelines relevant to the condition\'s documentation and management.',
          hidden: true,
        },
        {
          type: 'String',
          path: 'Condition.id',
          preselected: true,
          mandatory: true,
          label: 'Condition ID',
          info: 'The unique identifier for the Condition resource instance.',
          hidden: true,
        },
      ],
    },
    AllergyIntolerance: {
      filter: [
        {
          field: 'allergyCode',
          type: 'coding',
          label: 'Allergy Code (SNOMED CT)',
          valueSetUrls: [
            'https://ontoserver.imi.uni-luebeck.de/fhir/ValueSet/synthea_allergyintolerance',
          ],
          path: 'AllergyIntolerance.code.coding',
        },
      ],
      paths: [
        {
          type: 'Reference',
          path: 'AllergyIntolerance.patient.resolve().id',
          preselected: true,
          mandatory: true,
          label: 'Patient id',
          info: 'Identifier for the patient who has the allergy or intolerance.',
          hidden: true,
        },
        {
          type: 'Coding',
          path: 'AllergyIntolerance.code.coding.first()',
          preselected: true,
          mandatory: true,
          label: 'Primary Code (SNOMED)',
          info: 'The main code identifying the allergy or intolerance.',
        },
        {
          type: 'CodeableConcept',
          path: 'AllergyIntolerance.clinicalStatus.coding.first()',
          preselected: true,
          mandatory: false,
          label: 'Clinical Status',
          info: 'Clinical status of the allergy (e.g., active, inactive).',
        },
        {
          type: 'CodeableConcept',
          path: 'AllergyIntolerance.verificationStatus.coding.first()',
          preselected: true,
          mandatory: false,
          label: 'Verification Status',
          info: 'Verification status of the allergy (e.g., confirmed).',
        },
        {
          type: 'DateTime',
          path: 'AllergyIntolerance.recordedDate',
          preselected: true,
          mandatory: false,
          label: 'Recorded Date',
          info: 'Date when the allergy or intolerance was recorded.',
        },
        {
          type: 'Code',
          path: 'AllergyIntolerance.category.first()',
          preselected: true,
          mandatory: false,
          label: 'Category',
          info: 'Category of the allergy or intolerance (e.g., food, medication).',
        },
        {
          type: 'Code',
          path: 'AllergyIntolerance.criticality',
          preselected: true,
          mandatory: false,
          label: 'Criticality',
          info: 'Criticality of the allergy or intolerance (e.g., low, high).',
        },
        {
          type: 'CodeableConcept',
          path: 'AllergyIntolerance.reaction.manifestation.coding.first()',
          preselected: false,
          mandatory: false,
          label: 'Reaction Manifestation',
          info: 'Manifestation of the allergy or intolerance reaction.',
        },
        {
          type: 'Meta',
          path: 'AllergyIntolerance.meta.profile',
          preselected: false,
          mandatory: false,
          label: 'AllergyIntolerance Compliance Profiles',
          info: 'Indicates compliance with specific standards or guidelines relevant to the allergy or intolerance\'s documentation and management.',
          hidden: true,
        },
        {
          type: 'String',
          path: 'AllergyIntolerance.id',
          preselected: true,
          mandatory: true,
          label: 'AllergyIntolerance ID',
          info: 'The unique identifier for the AllergyIntolerance resource instance.',
          hidden: true,
        },
      ],
    },
    Immunization: {
      filter: [
        {
          field: 'vaccineCode',
          type: 'coding',
          label: 'Vaccine Code',
          valueSetUrls: [
            'https://ontoserver.imi.uni-luebeck.de/fhir/ValueSet/synthea_immunization',
          ],
          path: 'Immunization.vaccineCode.coding',
        },
      ],
      paths: [
        {
          type: 'Reference',
          path: 'Immunization.patient.resolve().id',
          preselected: true,
          mandatory: true,
          label: 'Patient id',
          info: 'Identifier for the patient who received the immunization.',
          hidden: true,
        },
        {
          type: 'Coding',
          path: 'Immunization.vaccineCode.coding.first()',
          preselected: true,
          mandatory: true,
          label: 'Vaccine Code (CVX)',
          info: 'The code identifying the vaccine administered.',
        },
        {
          type: 'DateTime',
          path: 'Immunization.occurrenceDateTime',
          preselected: true,
          mandatory: false,
          label: 'Occurrence Date/Time',
          info: 'The date and time when the immunization was administered.',
        },
        {
          type: 'Code',
          path: 'Immunization.status',
          preselected: true,
          mandatory: false,
          label: 'Status',
          info: 'The status of the immunization record (e.g., completed).',
        },
        {
          type: 'Boolean',
          path: 'Immunization.primarySource',
          preselected: true,
          mandatory: false,
          label: 'Primary Source',
          info: 'Indicates if the report of the immunization comes from a primary source.',
        },
        {
          type: 'Reference',
          path: 'Immunization.encounter.resolve().id',
          preselected: false,
          mandatory: false,
          label: 'Associated Encounter',
          info: 'Link to the healthcare encounter during which the immunization was administered.',
        },
        {
          type: 'Meta',
          path: 'Immunization.meta.profile',
          preselected: false,
          mandatory: false,
          label: 'Immunization Compliance Profiles',
          info: 'Indicates compliance with specific standards or guidelines relevant to the immunization\'s documentation and administration.',
          hidden: true,
        },
        {
          type: 'String',
          path: 'Immunization.id',
          preselected: true,
          mandatory: true,
          label: 'Immunization ID',
          info: 'The unique identifier for the Immunization resource instance.',
          hidden: true,
        },
      ],
    },
    MedicationAdministration: {
      filter: [
        {
          field: 'medicationCode',
          type: 'coding',
          label: 'Medication Code',
          valueSetUrls: [
            'https://ontoserver.imi.uni-luebeck.de/fhir/ValueSet/synthea_medication_administration',
          ],
          path: 'MedicationAdministration.medicationCodeableConcept.coding',
        },
      ],
      paths: [
        {
          type: 'Reference',
          path: 'MedicationAdministration.subject.resolve().ofType(Patient).id',
          preselected: true,
          mandatory: true,
          label: 'Patient id',
          info: 'Identifier for the patient who received the medication.',
          hidden: true,
        },
        {
          type: 'Coding',
          path: 'MedicationAdministration.medicationCodeableConcept.coding.first()',
          preselected: true,
          mandatory: true,
          label: 'Primary Medication Code',
          info: 'The main code identifying the medication administered.',
        },
        {
          type: 'DateTime',
          path: 'MedicationAdministration.effectiveDateTime',
          preselected: true,
          mandatory: false,
          label: 'Effective Date/Time',
          info: 'The date and time when the medication was administered.',
        },
        {
          type: 'Code',
          path: 'MedicationAdministration.status',
          preselected: true,
          mandatory: false,
          label: 'Administration Status',
          info: 'The status of the medication administration (e.g., completed).',
        },
        {
          type: 'Quantity',
          path: 'MedicationAdministration.dosage.dose.value',
          preselected: false,
          mandatory: false,
          label: 'Dosage value',
          info: 'The amount of medication administered.',
        },
        {
          type: 'Code',
          path: 'MedicationAdministration.dosage.dose.unit',
          preselected: false,
          mandatory: false,
          label: 'Dosage unit',
          info: 'The unit of measure for the medication dosage.',
        },
        {
          type: 'CodeableConcept',
          path: 'MedicationAdministration.dosage.route.coding.first()',
          preselected: false,
          mandatory: false,
          label: 'Administration Route',
          info: 'The path by which the medication was administered.',
        },
        {
          type: 'CodeableConcept',
          path: 'MedicationAdministration.dosage.site.coding.first()',
          preselected: false,
          mandatory: false,
          label: 'Administration Site',
          info: 'The anatomical site where the medication was administered.',
        },
        {
          type: 'CodeableConcept',
          path: 'MedicationAdministration.dosage.method.coding.first()',
          preselected: false,
          mandatory: false,
          label: 'Administration Method',
          info: 'The method by which the medication was administered.',
        },
        {
          type: 'Reference',
          path: 'MedicationAdministration.context.resolve().ofType(Encounter).id',
          preselected: false,
          mandatory: false,
          label: 'Associated Encounter',
          info: 'Link to the healthcare encounter during which the medication was administered.',
        },
        {
          type: 'Reference',
          path: 'MedicationAdministration.reasonReference.resolve().ofType(Condition).id',
          preselected: false,
          mandatory: false,
          label: 'Diagnostic Reason for Administration',
          info: 'Reference to the condition that justified the administration of the medication.',
        },
        {
          type: 'Reference',
          path: 'MedicationAdministration.reasonReference.resolve().ofType(Observation).id',
          preselected: false,
          mandatory: false,
          label: 'Observational Reason for Administration',
          info: 'Reference to the observation that justified the administration of the medication.',
        },
        {
          type: 'Meta',
          path: 'MedicationAdministration.meta.profile',
          preselected: false,
          mandatory: false,
          label: 'MedicationAdministration Compliance Profiles',
          info: 'Indicates compliance with specific standards or guidelines relevant to the medication administration\'s documentation and execution.',
          hidden: true,
        },
        {
          type: 'String',
          path: 'MedicationAdministration.id',
          preselected: true,
          mandatory: true,
          label: 'MedicationAdministration ID',
          info: 'The unique identifier for the MedicationAdministration resource instance.',
          hidden: true,
        },
      ],
    },
    Procedure: {
      filter: [
        {
          field: 'procedureCode',
          type: 'coding',
          label: 'Procedure Code (SNOMED CT)',
          valueSetUrls: ['https://ontoserver.imi.uni-luebeck.de/fhir/ValueSet/synthea_procedure'],
          path: 'Procedure.code.coding',
        },
      ],
      paths: [
        {
          type: 'Reference',
          path: 'Procedure.subject.resolve().ofType(Patient).id',
          preselected: true,
          mandatory: true,
          label: 'Patient id',
          info: 'Identifier for the patient who underwent the procedure.',
          hidden: true,
        },
        {
          type: 'Coding',
          path: 'Procedure.code.coding.first()',
          preselected: true,
          mandatory: true,
          label: 'Primary Procedure Code (SNOMED)',
          info: 'The main code identifying the procedure performed.',
        },
        {
          type: 'DateTime',
          path: 'Procedure.performedDateTime',
          preselected: false,
          mandatory: false,
          label: 'Performed Date/Time',
          info: 'The date and time when the procedure was performed.',
          hidden: true, // Assume hidden if only dates are relevant
        },
        {
          type: 'DateTime',
          path: 'Procedure.performedPeriod.start',
          preselected: true,
          mandatory: false,
          label: 'Performed Period Start',
          info: 'The start date when the procedure was performed.',
        },
        {
          type: 'DateTime',
          path: 'Procedure.performedPeriod.end',
          preselected: true,
          mandatory: false,
          label: 'Performed Period End',
          info: 'The end date when the procedure was performed.',
        },
        {
          type: 'Code',
          path: 'Procedure.status',
          preselected: true,
          mandatory: false,
          label: 'Status',
          info: 'The status of the procedure (e.g., completed).',
        },
        {
          type: 'Reference',
          path: 'Procedure.encounter.resolve().id',
          preselected: false,
          mandatory: false,
          label: 'Associated Encounter',
          info: 'Link to the healthcare encounter during which the procedure was performed.',
        },
        {
          type: 'CodeableConcept',
          path: 'Procedure.reasonCode.coding.first()',
          preselected: false,
          mandatory: false,
          label: 'Reason for Procedure',
          info: 'The reason the procedure was performed, expressed as a code.',
        },
        {
          type: 'Meta',
          path: 'Procedure.meta.profile',
          preselected: false,
          mandatory: false,
          label: 'Procedure Compliance Profiles',
          info: 'Indicates compliance with specific standards or guidelines relevant to the procedure\'s documentation and execution.',
          hidden: true,
        },
        {
          type: 'String',
          path: 'Procedure.id',
          preselected: true,
          mandatory: true,
          label: 'Procedure ID',
          info: 'The unique identifier for the Procedure resource instance.',
          hidden: true,
        },
      ],
    },
  };

  constructor() {}

  getFormConfig(profile: string) {
    return this.configs[profile] || { filter: [], paths: [] };
  }
}
